#!/usr/bin/perl

use 5.001 ; use strict ; use warnings ; 
use Getopt::Std ; getopts ':ap:x~' , \my %o ; 

sub usual () ; 
sub usualx () ; 
sub bytepos4line ( ) ; 
sub strxorsum ( $ ) ; 

sub printL (@) { print "$.:\t", @_ } ; 
sub print0 (@) { print @_ } ; 
* printL = * print0 if ! $o{':'} ; 

my $endpoint = $o{p} // undef ; 

if ( $o{a} || $o{p} ) { bytepos4line } elsif ( ! $o{x} ) { usual () } else { usualx ()  } ; 
exit 0 ; 


sub usual () {   
   printL length $_ , "\n" while <> ; 
}

sub usualx () { 
    while ( <> ) { 
        my $x = strxorsum $_ ;
        printL $x , "\t" , length $_ , "\n" ; 
    }
}

sub strxorsum ( $ ) { 
    my @chars = split // , $_ , 0 ; 
    my $x = 0 ; 
    $x ^= ord $_ for @chars ; 
    return sprintf '%02X', $x ; 
}


sub bytepos4line ( ) { 
    my $tp = 0 ; 
    while ( <> ) { 
       my $cp = tell ; 
       my @out = ( length $_ ) ; 
       unshift @out , strxorsum $_ if $o{x} ;        
       push @out ,  $tp+1 . ' - ' . $cp ;
       printL join ( "\t" , @out ) , "\n" ;
       last if defined $endpoint && $tp < $endpoint && $endpoint <= $cp ; 
       $tp = $cp ; 
    }
}


sub VERSION_MESSAGE {}
sub HELP_MESSAGE {
    use FindBin qw[ $Script ] ; 
    my ($a1,$L,$opt,@out) = ($ARGV[1]//'',0,'^o(p(t(i(o(ns?)?)?)?)?)?$') ;
    open my $FH , '<' , $0 ;
    while(<$FH>){
        s/\$0/$Script/g ;
        $out[$L] .= $_ if s/^=head1\s*(.*)\n/$1/s .. s/^=cut\n//s && ++$L and $a1 =~ /$opt/i ? m/^\s+\-/ : 1 ;
    }
    close $FH ;
    print $ENV{LANG} =~ m/^ja/ ? $out[0] : $out[1] // $out[0] ;
    exit 0 ;
}

=encoding utf8

=head1

  $0 各行が何バイトを持つかを出力する。

  行番号もバイト番号も開始を1とする。0ではない。

オプション : 
  -:  ; 行番号も表示する。
  -a  ; 各行が何バイト目から何バイト目を占めるかも出力する。
  -p num ; 指定したバイトの位置で出力を停止する。指定位置のバイトが何行目であるかを知るために使える。
  -x  ; 各行の、全バイトの排他的論理和も出力する。
   


=cut 